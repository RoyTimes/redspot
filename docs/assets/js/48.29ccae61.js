(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{399:function(a,s,t){"use strict";t.r(s);var e=t(42),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"yargs-parser"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yargs-parser"}},[a._v("#")]),a._v(" yargs-parser")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://travis-ci.org/yargs/yargs-parser",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://travis-ci.org/yargs/yargs-parser.svg",alt:"Build Status"}}),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://www.npmjs.com/package/yargs-parser",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/npm/v/yargs-parser.svg",alt:"NPM version"}}),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://img.shields.io/badge/release-standard%20version-brightgreen.svg",alt:"Standard Version"}}),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("The mighty option parser used by "),t("a",{attrs:{href:"https://github.com/yargs/yargs",target:"_blank",rel:"noopener noreferrer"}},[a._v("yargs"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("p",[a._v("visit the "),t("a",{attrs:{href:"http://yargs.js.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("yargs website"),t("OutboundLink")],1),a._v(" for more examples, and thorough usage instructions.")]),a._v(" "),t("img",{attrs:{width:"250",src:"https://raw.githubusercontent.com/yargs/yargs-parser/master/yargs-logo.png"}}),a._v(" "),t("h2",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[a._v("#")]),a._v(" Example")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" i yargs-parser --save\n")])])]),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" argv "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'yargs-parser'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("slice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("33")]),a._v(" --bar hello\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("33")]),a._v(", bar: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("or parse a string!")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" argv "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'yargs-parser'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--foo=99 --bar=33'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("99")]),a._v(", bar: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("33")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Convert an array of mixed types before passing to "),t("code",[a._v("yargs-parser")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" parse "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'yargs-parser'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'-f'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--zoom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("55")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("' '")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// <-- array to string")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("parse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'-f'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--zoom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("55")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// <-- array of strings")]),a._v("\n")])])]),t("h2",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[a._v("#")]),a._v(" API")]),a._v(" "),t("h3",{attrs:{id:"require-yargs-parser-args-opts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#require-yargs-parser-args-opts"}},[a._v("#")]),a._v(" require('yargs-parser')(args, opts={})")]),a._v(" "),t("p",[a._v("Parses command line arguments returning a simple mapping of keys and values.")]),a._v(" "),t("p",[t("strong",[a._v("expects:")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("args")]),a._v(": a string or array of strings representing the options to parse.")]),a._v(" "),t("li",[t("code",[a._v("opts")]),a._v(": provide a set of hints indicating how "),t("code",[a._v("args")]),a._v(" should be parsed:\n"),t("ul",[t("li",[t("code",[a._v("opts.alias")]),a._v(": an object representing the set of aliases for a key: "),t("code",[a._v("{alias: {foo: ['f']}}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.array")]),a._v(": indicate that keys should be parsed as an array: "),t("code",[a._v("{array: ['foo', 'bar']}")]),a._v("."),t("br"),a._v("\nIndicate that keys should be parsed as an array and coerced to booleans / numbers:"),t("br"),a._v(" "),t("code",[a._v("{array: [{ key: 'foo', boolean: true }, {key: 'bar', number: true}]}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.boolean")]),a._v(": arguments should be parsed as booleans: "),t("code",[a._v("{boolean: ['x', 'y']}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.coerce")]),a._v(": provide a custom synchronous function that returns a coerced value from the argument provided\n(or throws an error). For arrays the function is called only once for the entire array:"),t("br"),a._v(" "),t("code",[a._v("{coerce: {foo: function (arg) {return modifiedArg}}}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.config")]),a._v(": indicate a key that represents a path to a configuration file (this file will be loaded and parsed).")]),a._v(" "),t("li",[t("code",[a._v("opts.configObjects")]),a._v(": configuration objects to parse, their properties will be set as arguments:"),t("br"),a._v(" "),t("code",[a._v("{configObjects: [{'x': 5, 'y': 33}, {'z': 44}]}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.configuration")]),a._v(": provide configuration options to the yargs-parser (see: "),t("a",{attrs:{href:"#configuration"}},[a._v("configuration")]),a._v(").")]),a._v(" "),t("li",[t("code",[a._v("opts.count")]),a._v(": indicate a key that should be used as a counter, e.g., "),t("code",[a._v("-vvv")]),a._v(" = "),t("code",[a._v("{v: 3}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.default")]),a._v(": provide default values for keys: "),t("code",[a._v("{default: {x: 33, y: 'hello world!'}}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.envPrefix")]),a._v(": environment variables ("),t("code",[a._v("process.env")]),a._v(") with the prefix provided should be parsed.")]),a._v(" "),t("li",[t("code",[a._v("opts.narg")]),a._v(": specify that a key requires "),t("code",[a._v("n")]),a._v(" arguments: "),t("code",[a._v("{narg: {x: 2}}")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("opts.normalize")]),a._v(": "),t("code",[a._v("path.normalize()")]),a._v(" will be applied to values set to this key.")]),a._v(" "),t("li",[t("code",[a._v("opts.number")]),a._v(": keys should be treated as numbers.")]),a._v(" "),t("li",[t("code",[a._v("opts.string")]),a._v(": keys should be treated as strings (even if they resemble a number "),t("code",[a._v("-x 33")]),a._v(").")])])])]),a._v(" "),t("p",[t("strong",[a._v("returns:")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("obj")]),a._v(": an object representing the parsed value of "),t("code",[a._v("args")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("key/value")]),a._v(": key value pairs for each argument and their aliases.")]),a._v(" "),t("li",[t("code",[a._v("_")]),a._v(": an array representing the positional arguments.")]),a._v(" "),t("li",[a._v("[optional] "),t("code",[a._v("--")]),a._v(":  an array with arguments after the end-of-options flag "),t("code",[a._v("--")]),a._v(".")])])])]),a._v(" "),t("h3",{attrs:{id:"require-yargs-parser-detailed-args-opts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#require-yargs-parser-detailed-args-opts"}},[a._v("#")]),a._v(" require('yargs-parser').detailed(args, opts={})")]),a._v(" "),t("p",[a._v("Parses a command line string, returning detailed information required by the\nyargs engine.")]),a._v(" "),t("p",[t("strong",[a._v("expects:")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("args")]),a._v(": a string or array of strings representing options to parse.")]),a._v(" "),t("li",[t("code",[a._v("opts")]),a._v(": provide a set of hints indicating how "),t("code",[a._v("args")]),a._v(", inputs are identical to "),t("code",[a._v("require('yargs-parser')(args, opts={})")]),a._v(".")])]),a._v(" "),t("p",[t("strong",[a._v("returns:")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("argv")]),a._v(": an object representing the parsed value of "),t("code",[a._v("args")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("key/value")]),a._v(": key value pairs for each argument and their aliases.")]),a._v(" "),t("li",[t("code",[a._v("_")]),a._v(": an array representing the positional arguments.")]),a._v(" "),t("li",[a._v("[optional] "),t("code",[a._v("--")]),a._v(":  an array with arguments after the end-of-options flag "),t("code",[a._v("--")]),a._v(".")])])]),a._v(" "),t("li",[t("code",[a._v("error")]),a._v(": populated with an error object if an exception occurred during parsing.")]),a._v(" "),t("li",[t("code",[a._v("aliases")]),a._v(": the inferred list of aliases built by combining lists in "),t("code",[a._v("opts.alias")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("newAliases")]),a._v(": any new aliases added via camel-case expansion:\n"),t("ul",[t("li",[t("code",[a._v("boolean")]),a._v(": "),t("code",[a._v("{ fooBar: true }")])])])]),a._v(" "),t("li",[t("code",[a._v("defaulted")]),a._v(": any new argument created by "),t("code",[a._v("opts.default")]),a._v(", no aliases included.\n"),t("ul",[t("li",[t("code",[a._v("boolean")]),a._v(": "),t("code",[a._v("{ foo: true }")])])])]),a._v(" "),t("li",[t("code",[a._v("configuration")]),a._v(": given by default settings and "),t("code",[a._v("opts.configuration")]),a._v(".")])]),a._v(" "),t("p",[t("a",{attrs:{name:"configuration"}})]),a._v(" "),t("h3",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[a._v("#")]),a._v(" Configuration")]),a._v(" "),t("p",[a._v("The yargs-parser applies several automated transformations on the keys provided\nin "),t("code",[a._v("args")]),a._v(". These features can be turned on and off using the "),t("code",[a._v("configuration")]),a._v(" field\nof "),t("code",[a._v("opts")]),a._v(".")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" parsed "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("parser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--no-dice'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  configuration"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'boolean-negation'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h3",{attrs:{id:"short-option-groups"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#short-option-groups"}},[a._v("#")]),a._v(" short option groups")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")]),a._v(".")]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("short-option-groups")]),a._v(".")])]),a._v(" "),t("p",[a._v("Should a group of short-options be treated as boolean flags?")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -abc\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", a: true, b: true, c: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -abc\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", abc: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"camel-case-expansion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#camel-case-expansion"}},[a._v("#")]),a._v(" camel-case expansion")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")]),a._v(".")]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("camel-case-expansion")]),a._v(".")])]),a._v(" "),t("p",[a._v("Should hyphenated arguments be expanded into camel-case aliases?")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo-bar\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo-bar'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" true, fooBar: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo-bar\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo-bar'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"dot-notation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dot-notation"}},[a._v("#")]),a._v(" dot-notation")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("dot-notation")])])]),a._v(" "),t("p",[a._v("Should keys that contain "),t("code",[a._v(".")]),a._v(" be treated as objects?")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo.bar\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" bar: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo.bar\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo.bar"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"parse-numbers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parse-numbers"}},[a._v("#")]),a._v(" parse numbers")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("parse-numbers")])])]),a._v(" "),t("p",[a._v("Should keys that look like numbers be treated as such?")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("99.3")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("99.3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("99.3")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"99.3"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"boolean-negation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#boolean-negation"}},[a._v("#")]),a._v(" boolean negation")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("boolean-negation")])])]),a._v(" "),t("p",[a._v("Should variables prefixed with "),t("code",[a._v("--no")]),a._v(" be treated as negations?")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --no-foo\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --no-foo\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"no-foo"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"combine-arrays"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#combine-arrays"}},[a._v("#")]),a._v(" combine arrays")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("combine-arrays")])])]),a._v(" "),t("p",[a._v("Should arrays be combined when provided by both command line arguments and\na configuration file.")]),a._v(" "),t("h3",{attrs:{id:"duplicate-arguments-array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#duplicate-arguments-array"}},[a._v("#")]),a._v(" duplicate arguments array")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("duplicate-arguments-array")])])]),a._v(" "),t("p",[a._v("Should arguments be coerced into an array when duplicated:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", x: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", x: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"flatten-duplicate-arrays"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flatten-duplicate-arrays"}},[a._v("#")]),a._v(" flatten duplicate arrays")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("flatten-duplicate-arrays")])])]),a._v(" "),t("p",[a._v("Should array arguments be coerced into a single array when duplicated:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", x: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" -x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", x: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"greedy-arrays"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#greedy-arrays"}},[a._v("#")]),a._v(" greedy arrays")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("true")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("greedy-arrays")])])]),a._v(" "),t("p",[a._v("Should arrays consume more than one positional argument following their flag.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example --arr "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", arr: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example --arr "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", arr: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("strong",[a._v("Note: in "),t("code",[a._v("v18.0.0")]),a._v(" we are considering defaulting greedy arrays to "),t("code",[a._v("false")]),a._v(".")])]),a._v(" "),t("h3",{attrs:{id:"nargs-eats-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nargs-eats-options"}},[a._v("#")]),a._v(" nargs eats options")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("nargs-eats-options")])])]),a._v(" "),t("p",[a._v("Should nargs consume dash options as well as positional arguments.")]),a._v(" "),t("h3",{attrs:{id:"negation-prefix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#negation-prefix"}},[a._v("#")]),a._v(" negation prefix")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("no-")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("negation-prefix")])])]),a._v(" "),t("p",[a._v("The prefix to use for negated boolean variables.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --no-foo\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("if set to "),t("code",[a._v("quux")]),a._v(":")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --quuxfoo\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", foo: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"populate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#populate"}},[a._v("#")]),a._v(" populate --")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")]),a._v(".")]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("populate--")])])]),a._v(" "),t("p",[a._v("Should unparsed flags be stored in "),t("code",[a._v("--")]),a._v(" or "),t("code",[a._v("_")]),a._v(".")]),a._v(" "),t("p",[t("em",[a._v("If disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js a -b -- x y\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'x'")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", b: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("If enabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js a -b -- x y\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'x'")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", b: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"set-placeholder-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-placeholder-key"}},[a._v("#")]),a._v(" set placeholder key")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")]),a._v(".")]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("set-placeholder-key")]),a._v(".")])]),a._v(" "),t("p",[a._v("Should a placeholder be added for keys not set via the corresponding CLI argument?")]),a._v(" "),t("p",[t("em",[a._v("If disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -a "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" -c "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", a: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", c: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("If enabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -a "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" -c "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", a: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", b: undefined, c: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"halt-at-non-option"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#halt-at-non-option"}},[a._v("#")]),a._v(" halt at non-option")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")]),a._v(".")]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("halt-at-non-option")]),a._v(".")])]),a._v(" "),t("p",[a._v("Should parsing stop at the first positional argument? This is similar to how e.g. "),t("code",[a._v("ssh")]),a._v(" parses its command line.")]),a._v(" "),t("p",[t("em",[a._v("If disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -a run b -x y\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'b'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", a: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'run'")]),a._v(", x: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("If enabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js -a run b -x y\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'b'")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'-x'")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'y'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", a: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'run'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"strip-aliased"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strip-aliased"}},[a._v("#")]),a._v(" strip aliased")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("strip-aliased")])])]),a._v(" "),t("p",[a._v("Should aliases be removed before returning results?")]),a._v(" "),t("p",[t("em",[a._v("If disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --test-field "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'test-field'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", testField: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'test-alias'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", testAlias: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("If enabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --test-field "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'test-field'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", testField: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"strip-dashed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strip-dashed"}},[a._v("#")]),a._v(" strip dashed")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("strip-dashed")])])]),a._v(" "),t("p",[a._v("Should dashed keys be removed before returning results?  This option has no effect if\n"),t("code",[a._v("camel-case-expansion")]),a._v(" is disabled.")]),a._v(" "),t("p",[t("em",[a._v("If disabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --test-field "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'test-field'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(", testField: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("If enabled:")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --test-field "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", testField: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"unknown-options-as-args"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unknown-options-as-args"}},[a._v("#")]),a._v(" unknown options as args")]),a._v(" "),t("ul",[t("li",[a._v("default: "),t("code",[a._v("false")])]),a._v(" "),t("li",[a._v("key: "),t("code",[a._v("unknown-options-as-args")])])]),a._v(" "),t("p",[a._v("Should unknown options be treated like regular arguments?  An unknown option is one that is not\nconfigured in "),t("code",[a._v("opts")]),a._v(".")]),a._v(" "),t("p",[t("em",[a._v("If disabled")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --unknown-option --known-option "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" --string-option --unknown-option2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", unknownOption: true, knownOption: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(", stringOption: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")]),a._v(", unknownOption2: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("em",[a._v("If enabled")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("node example.js --unknown-option --known-option "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" --string-option --unknown-option2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" _: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--unknown-option'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(", knownOption: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(", stringOption: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'--unknown-option2'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"special-thanks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#special-thanks"}},[a._v("#")]),a._v(" Special Thanks")]),a._v(" "),t("p",[a._v("The yargs project evolves from optimist and minimist. It owes its\nexistence to a lot of James Halliday's hard work. Thanks "),t("a",{attrs:{href:"https://github.com/substack",target:"_blank",rel:"noopener noreferrer"}},[a._v("substack"),t("OutboundLink")],1),a._v(" "),t("strong",[a._v("beep")]),a._v(" "),t("strong",[a._v("boop")]),a._v(" \\o/")]),a._v(" "),t("h2",{attrs:{id:"license"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[a._v("#")]),a._v(" License")]),a._v(" "),t("p",[a._v("ISC")])])}),[],!1,null,null,null);s.default=n.exports}}]);